@page "/admin/dashboard"
@using Microsoft.AspNetCore.Components.QuickGrid
@using Microsoft.AspNetCore.Components.Sections
@inject IUserApi userApi
@inject IJSRuntime JSRuntime

<SectionContent SectionName="pageTitle">Registered Users</SectionContent>

<div class="row">
    <div class="col-12">
        <div class="table-responsive">
            <QuickGrid ItemsProvider="@_usersProvider" Pagination="_paginationState" class="table table-striped table-bordered">
                <PropertyColumn Property="u => u.Id" Title="ID" />
                <PropertyColumn Property="u => u.Name" Title="Name" />
                <PropertyColumn Property="u => u.Email" Title="Email" />
                <PropertyColumn Property="u => u.Phone" Title="Phone" />

                <TemplateColumn Title="Action">
                    <button class="btn btn-danger btn-sm" @onclick="() => OnDeleteUser(context.Id)">
                        <i class="bi bi-trash"></i> Delete
                    </button>
                </TemplateColumn>
            </QuickGrid>
        </div>

        <div class="mt-3">
            <Paginator State="_paginationState" />
        </div>
    </div>
</div>

@code {
    private const int DefaultPageSize = 10;
    private GridItemsProvider<UserDto> _usersProvider;

    private PaginationState _paginationState = new PaginationState { ItemsPerPage = DefaultPageSize };

    protected override void OnInitialized()
    {
        _usersProvider = async request =>
        {
            var pagedResult = await userApi.GetUsersAsync(request.StartIndex, request.Count ?? DefaultPageSize);
            return GridItemsProviderResult.From(pagedResult.Records, pagedResult.TotalCount);
        };
    }

    private async Task OnDeleteUser(int userId)
    {
        var confirmation = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this user?");
        if (confirmation)
        {
            await userApi.DeleteUserAsync(userId);
            _paginationState = new PaginationState { ItemsPerPage = DefaultPageSize }; 
            StateHasChanged(); 
        }
    }
}
